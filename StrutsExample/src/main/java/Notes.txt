Struts 1.x is the most famous, classic and proven Model-View-Contraller (MVC) framework. 
Often times, you will listen something like, meaningless to learn Struts 1.x, it’s a dead framework. 
However, with the huge success of Struts 1.x in early day, there are still hundreds of thousand companies are 
implemented Struts 1.x, and never consider upgrade, so the Struts 1.x is still causing many maintainability.
Struts 1.x is a complete web framework, provides complete web form components, validator, internalization, error handling, tiles layout, low learning curve and easy to implement it. In this tutorials, it provides many step by step examples and explanations on using Struts 1.x MVC framework.



Lab1:Struts Hello   world example
In this tutorial we show you how to develop a hello world web application using classic Struts 1.3 framework.

Tools and technologies used :
Struts 1.3.10
Maven 3.x
Eclipse 3.6

1. Maven Template
   Generate a   Maven project.
   
2. pom.xml file configuration
   Add the Struts dependencies in pom.xml. In Struts 1.x, you need the struts-core.jar for core module and 
   struts-taglib.jar for tag library.


3. Action Form//form bean class
   Create a Struts Action Form to hold the “hello world” data later.

4. Action (Controller)
   Create a Struts Action (Action Controller) file to control how Struts will forward the request, 
   just override the execute() method with your own logic here.
   
5. JSP view page
   Create a JSP page and access the Action Form object via Struts tag library and print it’s message property.
   

6. struts-config.xml
   Create a struts-config.xml file for the Struts configuration details, and put it into the WEB-INF folder.
   
7. The Web Application Deployment Descriptor
   In web.xml file, configure the Struts ActionServlet instance and map it with url-pattern “*.do”, 
   so that the container is aware of all the “*.do” pattern will redirect to Struts ActionServlet.
   
   
   
   
   
8. Java EE Module dependency (Optional)
   If you want to do the debugging work in Eclipse IDE, you have to make sure the Java EE module dependencies is 
   checked so that the Eclipse will deploy all the dependencies into correct folder. See details here.

9. Run it
   In Eclipse IDE, create a new server plugin and start it. You can access this example in the following URL.
   http://localhost:8080/StrutsExample/helloWorld.do
  
references:
http://www.mkyong.com/struts/struts-hello-world-example/
====================================================================================================================
Lab2:Configure a welcome page in Struts
Every website need a welcome or default page as an entry point. Here’s 3 ways to configure a welcome page in Struts.
1.  index.jsp
    The simplest way is create a “index.jsp” page and put it same level with the WEB-INF folder, project root folder.

    Access the project root
    http://localhost:8080/StrutsExample/

    It will default to index.jsp internally.
    http://localhost:8080/StrutsExample/index.jsp
    
2. web.xml welcome file
Declare a welcome-file in web.xml file.

  <welcome-file-list>
	<welcome-file>
		/pages/Welcome.jsp
	</welcome-file>
  </welcome-file-list>
  
 
 
3. JSP Forward
Create a “index.jsp” file as stated in method 1, and define a JSP forward tag to redirect it to another Struts action.
index.jsp

Declare a /Welcome web path, with a ForwardAction type to forward it to another JSP file.

struts-config.xml
<struts-config>

	<action-mappings>
		
		<action
			path="/Welcome"
			type="org.apache.struts.actions.ForwardAction"
			parameter="/pages/Welcome.jsp"/>
		
	</action-mappings>

</struts-config>

==================================================================================================================
Lab3:Struts – Multiple configuration files example
     Many developers like to put all Struts related stuff (action, form) into a single Struts configuration file. 
     It’s fast for the initial development but bad for the future maintenance, and may be those developers are not 
     aware of the Struts  allows multiple configuration files feature.
     
    
    
Note: 
Large Struts development project which involve more+ modules. 
putting all configuration into a single Struts configuration file (struts-config.xml).
The struts-config.xml will keep growing  fast, every update to this configuration file will take few minutes, 
and even wait half an hour for a single debugging deployment in Eclipse IDE. 
This is a serious performance issue and causing the project keep delay the production date. 
Please split the Struts configuration details into different modules, Struts can do it easily.

references:
http://www.mkyong.com/struts/struts-multiple-configuration-files-example/

==========================================================================================================





  
    
    
    
    
    
    
    